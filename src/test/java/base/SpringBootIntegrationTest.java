package base;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;

import java.util.Map;

/**
 * The base class configures and starts the Spring Context to run integration tests. It also exposes
 * some proper and common methods to help with tests and validations.
 *
 * The idea is that every integration test class extends this base class to run the test correctly.
 */
@SpringBootTest
@ActiveProfiles("test")
@AutoConfigureMockMvc(printOnlyOnFailure = false)
public abstract class SpringBootIntegrationTest {

    @Autowired
    protected MockMvc mockMvc;

    @Autowired
    protected ObjectMapper mapper;


    /**
     * Returns a tuple with key and value to represent a validation error message compatible with the payload
     * generated by the default Spring Boot controller advice for {@code MethodArgumentNotValidException} exception.
     */
    public Map<String, Object> violation(String field, String message) {
        return Map.of(
                "field", field,
                "message", message
        );
    }

    /**
     * Converts an object payload to {@code String} in JSON format
     */
    public String toJson(Object payload) throws JsonProcessingException {
        return mapper.writeValueAsString(payload);
    }
}
